services:
  api1: &api
    build:
      context: .
    hostname: api1
    environment:
      - HTTP_PORT=80
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - db
    ports:
      - "8080:80"
    expose:
      - "80"
    deploy:
      resources:
        limits:
          cpus: '0.250'
          memory: 500M

  api2:
    <<: *api
    ports:
      - "8081:80"
    hostname: api2

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.250'
          memory: 500M

  db:
    image: postgres:alpine3.17
    container_name: postgres
    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf
    hostname: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rinha
    volumes:
      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    deploy:
      resources:
        limits:
          cpus: '0.500'
          memory: 1000M

  cache:
    image: redis:7-alpine
    command: redis-server --save "" --appendonly no --maxclients 20000 --loglevel notice
    container_name: redis
    hostname: redis
    ports:
      - 6379:6379
    deploy:
      resources:
        limits:
          cpus: '0.250'
          memory: 500M
